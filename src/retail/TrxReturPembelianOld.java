/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TrxReturPembelian.java
 *
 * Created on Apr 2, 2009, 4:53:44 PM
 */

package retail;

import java.awt.Color;
import java.awt.Component;
import java.awt.Container;
import java.awt.FocusTraversalPolicy;
import java.awt.KeyboardFocusManager;
import java.awt.event.ActionEvent;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import retail.main.GeneralFunction;

/**
 *
 * @author ustadho
 */
public class TrxReturPembelianOld extends javax.swing.JInternalFrame {
    private Connection conn;
    retail.main.ListRsbm lst=new retail.main.ListRsbm();
    private JDesktopPane desktop;
    ArrayList lstSatuan=new ArrayList();
    ArrayList lstHarga=new ArrayList();
    ArrayList lstKonversi=new ArrayList();
    ArrayList lstGudang=new ArrayList();
    private DefaultTableModel myModel;
    private NumberFormat numFmt=NumberFormat.getInstance();
    private MyKeyListener kListener=new MyKeyListener();
    
    /** Creates new form TrxReturPembelian */
    public TrxReturPembelianOld() {
        initComponents();

        for(int i=0;i<panelAddItem.getComponentCount();i++){
            Component c = panelAddItem.getComponent(i);
            if(c.getClass().getSimpleName().equalsIgnoreCase("JTEXTFIELD")    || c.getClass().getSimpleName().equalsIgnoreCase("JFormattedTextField")
            || c.getClass().getSimpleName().equalsIgnoreCase("JTextArea") || c.getClass().getSimpleName().equalsIgnoreCase("JComboBox")
            || c.getClass().getSimpleName().equalsIgnoreCase("JCheckBox")  || c.getClass().getSimpleName().equalsIgnoreCase("JButton")) {
                c.addKeyListener(kListener);
                c.addFocusListener(txtFoculListener);

            }
        }
    }

    public void setConn(Connection con){
        this.conn=con;
    }

    void setDesktopPane(JDesktopPane jDesktopPane1) {
        this.desktop=jDesktopPane1;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        txtKodeSupp = new javax.swing.JTextField();
        lblNamaSupp = new javax.swing.JLabel();
        lblAlamatSupp = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtCatatan = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtNoInvoice1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        jLabel18 = new javax.swing.JLabel();
        txtNoInvoice2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXTable1 = new org.jdesktop.swingx.JXTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        panelAddItem = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtNamaBarang = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtQty = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        cmbSatuan = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        txtHarga = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtDisc = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtTax = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtKonv = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        txtBatchNo = new javax.swing.JTextField();
        txtExpDate = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Retur Pembelian");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtKodeSupp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtKodeSupp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtKodeSuppFocusLost(evt);
            }
        });
        txtKodeSupp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKodeSuppKeyReleased(evt);
            }
        });
        jPanel2.add(txtKodeSupp, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 80, 21));

        lblNamaSupp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(lblNamaSupp, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 300, 21));

        lblAlamatSupp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.add(lblAlamatSupp, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 35, 380, 21));

        jLabel9.setText("Catatan"); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 80, 21));

        jLabel17.setText("Supplier"); // NOI18N
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 21));

        txtCatatan.setColumns(20);
        txtCatatan.setRows(5);
        jScrollPane3.setViewportView(txtCatatan);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 60, 380, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 490, 110));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel15.setText("Tanggal"); // NOI18N
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 120, 21));

        txtNoInvoice1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNoInvoice1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNoInvoice1FocusLost(evt);
            }
        });
        txtNoInvoice1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoInvoice1KeyReleased(evt);
            }
        });
        jPanel1.add(txtNoInvoice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 120, 21));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel16.setText("Return No."); // NOI18N
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 120, 21));
        jPanel1.add(jXDatePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 120, -1));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel18.setText("No. Penerimaan"); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 120, 21));

        txtNoInvoice2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtNoInvoice2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNoInvoice2FocusLost(evt);
            }
        });
        txtNoInvoice2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoInvoice2KeyReleased(evt);
            }
        });
        jPanel1.add(txtNoInvoice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 120, 21));

        jButton1.setText("...");
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 79, 30, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 460, 110));

        jXTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Kode", "Nama Barang", "Batch No.", "Exp. Date", "Qty", "Satuan", "Harga Sat", "Tax", "Sub Total", "Konv"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.Double.class, java.lang.Float.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jXTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jXTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jXTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jXTable1);
        jXTable1.getColumnModel().getColumn(1).setPreferredWidth(300);
        jXTable1.getColumnModel().getColumn(3).setResizable(false);
        jXTable1.getColumnModel().getColumn(4).setPreferredWidth(90);
        jXTable1.getColumnModel().getColumn(7).setPreferredWidth(40);
        jXTable1.getColumnModel().getColumn(9).setPreferredWidth(40);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 950, 260));

        jButton2.setText("Clear");
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 70, -1));

        jButton3.setText("Close");
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 470, 70, -1));

        jButton4.setText("Simpan");
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 470, 90, -1));

        panelAddItem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        panelAddItem.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setBackground(new java.awt.Color(255, 255, 204));
        jLabel8.setText("Kode");
        jLabel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel8.setOpaque(true);
        panelAddItem.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 2, 100, -1));

        txtKode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKodeKeyReleased(evt);
            }
        });
        panelAddItem.add(txtKode, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 100, -1));

        jLabel19.setBackground(new java.awt.Color(255, 255, 204));
        jLabel19.setText("Barang");
        jLabel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel19.setOpaque(true);
        panelAddItem.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 2, 230, -1));

        txtNamaBarang.setEditable(false);
        panelAddItem.add(txtNamaBarang, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 230, -1));

        jLabel20.setBackground(new java.awt.Color(255, 255, 204));
        jLabel20.setText("Satuan");
        jLabel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel20.setOpaque(true);
        panelAddItem.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 2, 60, -1));

        txtQty.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panelAddItem.add(txtQty, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, 40, -1));

        jLabel21.setBackground(new java.awt.Color(255, 255, 204));
        jLabel21.setText("Exp. Date");
        jLabel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel21.setOpaque(true);
        panelAddItem.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 2, 63, -1));

        panelAddItem.add(cmbSatuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 60, -1));

        jLabel22.setBackground(new java.awt.Color(255, 255, 204));
        jLabel22.setText("Harga");
        jLabel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel22.setOpaque(true);
        panelAddItem.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 2, 80, -1));

        txtHarga.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panelAddItem.add(txtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 20, 80, -1));

        jLabel23.setBackground(new java.awt.Color(255, 255, 204));
        jLabel23.setText("Disc (%)");
        jLabel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel23.setOpaque(true);
        panelAddItem.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 2, 50, -1));

        txtDisc.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelAddItem.add(txtDisc, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 50, -1));

        jLabel24.setBackground(new java.awt.Color(255, 255, 204));
        jLabel24.setText("Tax (%)");
        jLabel24.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel24.setOpaque(true);
        panelAddItem.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 2, 50, -1));

        txtTax.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelAddItem.add(txtTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 20, 50, -1));

        jLabel25.setBackground(new java.awt.Color(255, 255, 204));
        jLabel25.setText("Sub Total");
        jLabel25.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel25.setOpaque(true);
        panelAddItem.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 2, 80, -1));

        txtSubTotal.setEditable(false);
        txtSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panelAddItem.add(txtSubTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, 80, -1));

        jLabel26.setBackground(new java.awt.Color(255, 255, 204));
        jLabel26.setText("Konv");
        jLabel26.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel26.setOpaque(true);
        panelAddItem.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 2, 40, -1));

        txtKonv.setEditable(false);
        txtKonv.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelAddItem.add(txtKonv, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 20, 40, -1));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        panelAddItem.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(879, 19, 70, -1));

        txtBatchNo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panelAddItem.add(txtBatchNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 77, -1));

        txtExpDate.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        panelAddItem.add(txtExpDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(417, 20, 63, -1));

        jLabel27.setBackground(new java.awt.Color(255, 255, 204));
        jLabel27.setText("QTY");
        jLabel27.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel27.setOpaque(true);
        panelAddItem.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 2, 40, -1));

        jLabel29.setBackground(new java.awt.Color(255, 255, 204));
        jLabel29.setText("Batch No.");
        jLabel29.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel29.setOpaque(true);
        panelAddItem.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 2, 77, -1));

        getContentPane().add(panelAddItem, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 950, 43));

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("Sub Total"); // NOI18N
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 440, 130, 21));

        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTotal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTotalFocusLost(evt);
            }
        });
        txtTotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTotalKeyReleased(evt);
            }
        });
        getContentPane().add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 440, 120, 21));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-976)/2, (screenSize.height-539)/2, 976, 539);
    }// </editor-fold>//GEN-END:initComponents

    private void txtKodeSuppFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtKodeSuppFocusLost
        //        if(!lst.isVisible() && !txtNoAnggota.getText().equalsIgnoreCase("") && isNew)
        //            txtPinjamanKe.setText(numFmt.format(getPinjamanKe()));
}//GEN-LAST:event_txtKodeSuppFocusLost

    private void txtKodeSuppKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodeSuppKeyReleased
        try {
            String sCari = txtKodeSupp.getText();
            switch (evt.getKeyCode()) {
                case java.awt.event.KeyEvent.VK_ENTER: {
                    if (lst.isVisible()) {
                        Object[] obj = lst.getOResult();
                        if (obj.length > 0) {
                            txtKodeSupp.setText(obj[0].toString());
                            lst.udfSelected();
                            lst.setVisible(false);
                        }
                    }
                    break;
                }
                case java.awt.event.KeyEvent.VK_DELETE: {
                    lst.setFocusable(true);
                    lst.requestFocus();

                    break;
                }
                case java.awt.event.KeyEvent.VK_ESCAPE: {
                    lst.setVisible(false);
                    txtKodeSupp.setText("");
                    lblNamaSupp.setText("");
                    lblAlamatSupp.setText("");
                    break;
                }
                case java.awt.event.KeyEvent.VK_DOWN: {
                    if (lst.isVisible()) {
                        lst.setFocusableWindowState(true);
                        lst.setVisible(true);
                        lst.requestFocus();
                    }
                    break;
                }
                default: {
                    if (!evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("Up") || !evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("F2")) {
                        String sQry = "select kode_supp as Kode, coalesce(nama_supp,'') as Supplier, " +
                                "coalesce(alamat_1,'')||' '||coalesce(nama_kota,'') as alamat  " +
                                "from r_supplier s " +
                                "left join m_kota k on s.kota=k.kode_kota " +
                                "where (kode_supp||coalesce(nama_supp,'')) " +
                                "iLike '%" + txtKodeSupp.getText() + "%' order by coalesce(nama_supp,'') ";

                        //System.out.println(sQry);
                        lst.setSQuery(sQry);

                        lst.setBounds(this.getX()+MainForm.iLeft+ this.jPanel2.getX() + this.txtKodeSupp.getX() + 4,
                                this.getY() + MainForm.iTop+ this.jPanel2.getY() + this.txtKodeSupp.getY() + txtKodeSupp.getHeight() + 53,
                                txtKodeSupp.getWidth() + lblNamaSupp.getWidth()+120,
                                (lst.getIRowCount()>10? 12*lst.getRowHeight(): (lst.getIRowCount()+3)*lst.getRowHeight()));


                        lst.setFocusableWindowState(false);
                        lst.setTxtCari(txtKodeSupp);
                        lst.setCompDes(new javax.swing.JLabel[]{lblNamaSupp, lblAlamatSupp});
                        lst.setColWidth(0, txtKodeSupp.getWidth());
                        lst.setColWidth(1, lblNamaSupp.getWidth()-10);

                        if (lst.getIRowCount() > 0) {
                            lst.setVisible(true);
                            requestFocusInWindow();
                            txtKodeSupp.requestFocus();
                        } else {
                            lst.setVisible(false);
                            txtKodeSupp.setText("");
                            lblNamaSupp.setText("");
                            lblAlamatSupp.setText("");
                            txtKodeSupp.requestFocus();
                        }
                    }
                    break;
                }
            }
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
}//GEN-LAST:event_txtKodeSuppKeyReleased

    private void txtNoInvoice1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoInvoice1FocusLost
        // TODO add your handling code here:
}//GEN-LAST:event_txtNoInvoice1FocusLost

    private void txtNoInvoice1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoInvoice1KeyReleased
        // TODO add your handling code here:
}//GEN-LAST:event_txtNoInvoice1KeyReleased

    private void txtNoInvoice2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNoInvoice2FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoInvoice2FocusLost

    private void txtNoInvoice2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoInvoice2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoInvoice2KeyReleased

    private void txtKodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKodeKeyReleased
        try {
            switch (evt.getKeyCode()) {
                case java.awt.event.KeyEvent.VK_ENTER: {
                    if (lst.isVisible()) {
                        Object[] obj = lst.getOResult();
                        if (obj.length > 0) {
                            txtKode.setText(obj[0].toString());
                            //txtNamaBarang.setText(obj[1].toString());
                            lst.udfSelected();
                            //txtSubTotal.setText(txtHarga.getText());
                            lst.setVisible(false);
                        }
                    }
                    if(txtNamaBarang.getText().length()>0){
                        udfSetSatuanBarang();
                        cmbSatuan.setModel(cmbSatuan.getModel());
                    }

                    break;
                }
                case java.awt.event.KeyEvent.VK_DELETE: {
                    lst.setFocusable(true);
                    lst.requestFocus();

                    break;
                }
                case java.awt.event.KeyEvent.VK_ESCAPE: {
                    lst.setVisible(false);
                    udfStartNewItem();
                    break;
                }
                case java.awt.event.KeyEvent.VK_DOWN: {
                    if (lst.isVisible()) {
                        lst.setFocusableWindowState(true);
                        lst.setVisible(true);
                        lst.requestFocus();
                    }
                    break;
                }
                default: {
                    if (!evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("Up") || !evt.getKeyText(evt.getKeyCode()).equalsIgnoreCase("F2")) {
                        String sQry="Select kode_item,  coalesce(nama_item, '') as nama_item, " +
                                "coalesce(unit_jual,'') as sat_jual, coalesce(harga_jual,0)*coalesce(konv_jual,0) as harga_jual, 1 as qty, 1 as konv,coalesce(harga_jual,0)*coalesce(konv_jual,0) as subtotal " +
                                "from r_item where (kode_item||coalesce(nama_item,'')) ilike  '%"+txtKode.getText()+"%'";

                        //System.out.println(sQry);
                        lst.setSQuery(sQry);

                        lst.setBounds(this.getX()+ MainForm.iLeft+ this.panelAddItem.getX() + this.txtKode.getX() + 4,
                                this.getY() + MainForm.iTop+ this.panelAddItem.getY() + this.txtKode.getY() + txtKode.getHeight() + 53,
                                txtKode.getWidth() + txtNamaBarang.getWidth()+10,
                                (lst.getIRowCount()>10? 12*lst.getRowHeight(): (lst.getIRowCount()+3)*lst.getRowHeight()));


                        lst.setFocusableWindowState(false);
                        lst.setTxtCari(txtKode);
                        //lst.setLblDes(new javax.swing.JLabel[]{lblAnggota, lblNip});
                        lst.setCompDes(new JComponent[]{txtNamaBarang, cmbSatuan, txtHarga, txtQty, txtKonv, txtSubTotal});

                        lst.setColWidth(0, txtKode.getWidth());
                        lst.setColWidth(1, txtNamaBarang.getWidth()-10);

                        if (lst.getIRowCount() > 0) {
                            lst.setVisible(true);
                            requestFocusInWindow();
                            txtKode.requestFocus();
                        } else {
                            lst.setVisible(false);
                            //                            txtNoAnggota.setText("");
                            //                            lblAnggota.setText("");
                            //                            lblNip.setText("");
                            txtKode.requestFocus();
                        }
                    }
                    break;
                }
            }
        } catch (SQLException se) {
            System.out.println(se.getMessage());
        }
}//GEN-LAST:event_txtKodeKeyReleased

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(btnAdd.getText().equalsIgnoreCase("ADD")){
            myModel.addRow(new Object[]{
                txtKode.getText(),
                txtNamaBarang.getText(),
                txtBatchNo.getText(),
                txtExpDate.getText(),
                numFmt.format(GeneralFunction.udfGetDouble(txtQty.getText())),
                cmbSatuan.getSelectedItem().toString(),
                numFmt.format(GeneralFunction.udfGetDouble(txtHarga.getText())),
                numFmt.format(GeneralFunction.udfGetDouble(txtDisc.getText())),
                numFmt.format(GeneralFunction.udfGetDouble(txtTax.getText())),
                numFmt.format(GeneralFunction.udfGetDouble(txtSubTotal.getText())),
                txtKonv.getText()
            });
            jXTable1.setRowSelectionInterval(myModel.getRowCount()-1, myModel.getRowCount()-1);
        }else{
            int iRow=jXTable1.getSelectedRow();
            TableColumnModel column=jXTable1.getColumnModel();
            txtKode.setText(myModel.getValueAt(iRow, column.getColumnIndex("Kode")).toString());
            udfSetSatuanBarang();
            txtNamaBarang.setText(myModel.getValueAt(iRow, column.getColumnIndex("Barang")).toString());
            txtBatchNo.setText(myModel.getValueAt(iRow, column.getColumnIndex("Batch No.")).toString());
            txtExpDate.setText(myModel.getValueAt(iRow, column.getColumnIndex("Exp. Date")).toString());
            txtQty.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("QTY")).toString())));
            cmbSatuan.setSelectedItem(myModel.getValueAt(iRow, column.getColumnIndex("Satuan")));
            txtHarga.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Harga")).toString())));
            txtQty.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("QTY")).toString())));
            txtDisc.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Disc(%)")).toString())));
            txtTax.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Tax(%)")).toString())));
            txtSubTotal.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Sub Total")).toString())));
            txtKonv.setText(numFmt.format(GeneralFunction.udfGetInt(myModel.getValueAt(iRow, column.getColumnIndex("Konv")).toString())));
            btnAdd.setText("Add");
        }
        udfStartNewItem();
}//GEN-LAST:event_btnAddActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        udfInitForm();
    }//GEN-LAST:event_formInternalFrameOpened

    private void jXTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jXTable1KeyPressed
        int iRow=jXTable1.getSelectedRow();
        if(iRow>=0){
            if(evt.getKeyCode()==KeyEvent.VK_DELETE){
                if(JOptionPane.showConfirmDialog(this, "Apakah benar item akan dihapus?", "Konfirmasi delete item", JOptionPane.YES_NO_OPTION)==JOptionPane.YES_OPTION){
                    myModel.removeRow(jXTable1.getSelectedRow());
                }
            }else if(evt.getKeyCode()==KeyEvent.VK_F3){
                TableColumnModel column=jXTable1.getColumnModel();

                txtKode.setText(myModel.getValueAt(iRow, column.getColumnIndex("Kode")).toString());
                udfSetSatuanBarang();
                txtNamaBarang.setText(myModel.getValueAt(iRow, column.getColumnIndex("Barang")).toString());
                txtBatchNo.setText(myModel.getValueAt(iRow, column.getColumnIndex("Batch No.")).toString());
                txtExpDate.setText(myModel.getValueAt(iRow, column.getColumnIndex("Exp. Date")).toString());
                txtQty.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("QTY")).toString())));
                cmbSatuan.setSelectedItem(myModel.getValueAt(iRow, column.getColumnIndex("Satuan")));
                txtHarga.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Harga")).toString())));
                txtQty.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("QTY")).toString())));
                txtDisc.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Disc(%)")).toString())));
                txtTax.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Tax(%)")).toString())));
                txtSubTotal.setText(numFmt.format(GeneralFunction.udfGetDouble(myModel.getValueAt(iRow, column.getColumnIndex("Sub Total")).toString())));
                txtKonv.setText(numFmt.format(GeneralFunction.udfGetInt(myModel.getValueAt(iRow, column.getColumnIndex("Konv")).toString())));
                btnAdd.setText("Update");
            }
        }
    }//GEN-LAST:event_jXTable1KeyPressed

    private void txtTotalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTotalFocusLost
        // TODO add your handling code here:
}//GEN-LAST:event_txtTotalFocusLost

    private void txtTotalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalKeyReleased
        // TODO add your handling code here:
}//GEN-LAST:event_txtTotalKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JComboBox cmbSatuan;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private org.jdesktop.swingx.JXTable jXTable1;
    private javax.swing.JLabel lblAlamatSupp;
    private javax.swing.JLabel lblNamaSupp;
    private javax.swing.JPanel panelAddItem;
    private javax.swing.JTextField txtBatchNo;
    private javax.swing.JTextArea txtCatatan;
    private javax.swing.JTextField txtDisc;
    private javax.swing.JTextField txtExpDate;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtKode;
    private javax.swing.JTextField txtKodeSupp;
    private javax.swing.JTextField txtKonv;
    private javax.swing.JTextField txtNamaBarang;
    private javax.swing.JTextField txtNoInvoice1;
    private javax.swing.JTextField txtNoInvoice2;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtSubTotal;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private void udfInitForm() {
        lst.setConn(this.conn);
        lst.setVisible(false);

        udfClear();
    }

    private void udfSetSatuanBarang(){
        lstSatuan.clear();
        lstHarga.clear();
        lstKonversi.clear();
        cmbSatuan.removeAllItems();

        try{
            int iRow=jXTable1.getSelectedRow();
            ResultSet rs=conn.createStatement().executeQuery("select * from fn_r_list_satuan_item('"+txtKode.getText()+"') as (harga double precision, satuan varchar, konversi double precision)");
            while(rs.next()){
                lstHarga.add(rs.getDouble("harga"));
                lstSatuan.add(rs.getString("satuan"));
                cmbSatuan.addItem(rs.getString("satuan"));
                lstKonversi.add(rs.getString("konversi"));
            }
            //myModel.setValueAt(cmbSatuan.getModel(), iRow, jXTable1.getColumnModel().getColumnIndex("lstSat"));
            rs.close();
        }catch(SQLException se){
            JOptionPane.showMessageDialog(this,"udfSetSatuanBarang()\n"+ se.getMessage());
        }
    }

    private void udfStartNewItem(){
        txtKode.setText("");
        txtNamaBarang.setText("");
        txtBatchNo.setText("");
        txtExpDate.setText("");
        txtQty.setText("");
        txtHarga.setText("");
        cmbSatuan.removeAllItems();
        txtDisc.setText("");
        txtTax.setText("");
        txtSubTotal.setText("");
        txtKonv.setText("");
        txtKode.requestFocus();
        btnAdd.setText("Add");
    }

    private void udfClear() {
        txtKodeSupp.setText("");
        lblNamaSupp.setText("");
        lblAlamatSupp.setText("");

        myModel=(DefaultTableModel)jXTable1.getModel();
        myModel.setNumRows(0);
        jXTable1.setModel(myModel);

        txtKodeSupp.requestFocus(); lblNamaSupp.setText(""); lblAlamatSupp.setText("");
        txtCatatan.setText(""); //txtNoInvoice.setText("");

    }

    private FocusListener txtFoculListener=new FocusListener() {
        public void focusGained(FocusEvent e) {
           Component c=(Component) e.getSource();
           c.setBackground(g1);

           if(c.equals(txtQty)||c.equals(txtDisc)||c.equals(txtHarga)||c.equals(txtTax)){
                ((JTextField)e.getSource()).setSelectionStart(0);
               ((JTextField)e.getSource()).setSelectionEnd(((JTextField)e.getSource()).getText().length());

           }

           //c.setForeground(fPutih);
           //c.setCaretColor(new java.awt.Color(255, 255, 255));
        }
        public void focusLost(FocusEvent e) {
            Component c=(Component) e.getSource();
            c.setBackground(g2);

            if(e.getSource().equals(txtQty)||e.getSource().equals(txtHarga)||e.getSource().equals(txtDisc)||e.getSource().equals(txtTax)){
                ((JTextField)e.getSource()).setText(numFmt.format(GeneralFunction.udfGetDouble(((JTextField)e.getSource()).getText())));
                udfItemSubTotal();
            }else if(c.equals(txtExpDate)){
                if(txtExpDate.getText().trim().equalsIgnoreCase("")) return;
                if(!txtExpDate.getText().trim().equalsIgnoreCase("/  /")||!txtExpDate.getText().trim().equalsIgnoreCase("")) {
                    if(txtExpDate.getText().length()==7) txtExpDate.setText("01/"+txtExpDate.getText());
                    if(!validateDate(txtExpDate.getText(),true,"dd/MM/yyyy")){
                        JOptionPane.showMessageDialog(null, "Silakan masukkan tanggal dengan format 'dd/MM/yyyy' !");
                        //txtExpDate.setText("");
                        txtExpDate.requestFocus();

                        return;

                    }
                }else{
                    txtExpDate.setText("");
                }
           }
            //c.setForeground(fHitam);
        }
   };

   private void udfItemSubTotal(){
        double  subTotal= (GeneralFunction.udfGetDouble(txtQty.getText())* GeneralFunction.udfGetDouble(txtHarga.getText()));
        double diskon   =(subTotal/100)*GeneralFunction.udfGetDouble(txtDisc.getText());
        double tax =(subTotal/100)*GeneralFunction.udfGetDouble(txtTax.getText());

        subTotal=subTotal+tax-diskon;
        txtSubTotal.setText(new DecimalFormat("#,##0").format(subTotal));
    }

   public static boolean validateDate( String dateStr, boolean allowPast, String formatStr){
     if (formatStr == null) return false; // or throw some kinda exception, possibly a InvalidArgumentException
		SimpleDateFormat df = new SimpleDateFormat(formatStr);
		Date testDate = null;
		try
		{
			testDate = df.parse(dateStr);
		}
		catch (java.text.ParseException e)
		{
			// invalid date format
			return false;
		}
		if (!allowPast)
		{
			// initialise the calendar to midnight to prevent
			// the current day from being rejected
			Calendar cal = Calendar.getInstance();
			cal.set(Calendar.HOUR_OF_DAY, 0);
			cal.set(Calendar.MINUTE, 0);
			cal.set(Calendar.SECOND, 0);
			cal.set(Calendar.MILLISECOND, 0);
			if (cal.getTime().after(testDate)) return false;
		}
		// now test for legal values of parameters
		if (!df.format(testDate).equals(dateStr)) return false;
		return true;
	}


   public class MyKeyListener extends KeyAdapter {
        double sisa=0;

        public void keyTyped(KeyEvent e) {
            if(e.getSource().equals(txtQty)||e.getSource().equals(txtHarga)||e.getSource().equals(txtDisc)||e.getSource().equals(txtTax)){
                GeneralFunction.keyTyped(e);
                //udfItemSubTotal();
            }
        }
        public void keyReleased(KeyEvent e) {
          //if(e.getSource().equals(txtAngsuran))


        }
    public void keyPressed(KeyEvent evt) {
        int keyKode = evt.getKeyCode();
        switch(keyKode){
            case KeyEvent.VK_ENTER : {
                if (!lst.isVisible()){
                    Component c = findNextFocus();
                    if (c!=null) c.requestFocus();
                }else{
                    lst.requestFocus();
                }
                break;
            }

            case KeyEvent.VK_UP : {
                if (!lst.isVisible()){
                Component c = findPrevFocus();
                if (c!=null) c.requestFocus();
                }else{
                lst.requestFocus();
                }
                break;
            }
            case KeyEvent.VK_DOWN : {
                if (!lst.isVisible()){
                Component c = findNextFocus();
                if (c!=null) c.requestFocus();
                }else{
                lst.requestFocus();
                }
                break;
            }
            case KeyEvent.VK_ESCAPE : {
                if(evt.getSource().equals(txtKode)||evt.getSource().equals(txtNamaBarang)||evt.getSource().equals(txtBatchNo)||
                        evt.getSource().equals(txtKode)||evt.getSource().equals(txtExpDate)||evt.getSource().equals(txtQty)||
                        evt.getSource().equals(txtDisc)||evt.getSource().equals(txtTax)||
                        evt.getSource().equals(txtSubTotal)||evt.getSource().equals(txtKonv)){

                    udfStartNewItem();
                    lst.setVisible(false);
                    btnAdd.setText("Add");
                }

                break;
            }
            case KeyEvent.VK_F2: {  //Bayar
                udfStartNewItem();
                break;
            }
            case KeyEvent.VK_F3: {  //Bayar
                jXTable1KeyPressed(evt);
                break;
            }
            case KeyEvent.VK_INSERT: {  //insert item
                btnAddActionPerformed(new ActionEvent(btnAdd, ActionEvent.ACTION_PERFORMED, "Add"));
                break;
            }
            case KeyEvent.VK_F9: {  //Delete
                //udfLookupBarang();
                break;
            }

        }
    }

    public Component findNextFocus() {
	// Find focus owner
	Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
	Container root = c == null ? null : c.getFocusCycleRootAncestor();

	if (root != null) {
	    FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
	    Component nextFocus = policy.getComponentAfter(root, c);
	    if (nextFocus == null) {
		nextFocus = policy.getDefaultComponent(root);
	    }
	    return nextFocus;
	}
	return null;
    }

    public Component findPrevFocus() {
	// Find focus owner
	Component c = KeyboardFocusManager.getCurrentKeyboardFocusManager().getFocusOwner();
	Container root = c == null ? null : c.getFocusCycleRootAncestor();

	if (root != null) {
	    FocusTraversalPolicy policy = root.getFocusTraversalPolicy();
	    Component prevFocus = policy.getComponentBefore(root, c);
	    if (prevFocus == null) {
		prevFocus = policy.getDefaultComponent(root);
	    }
	    return prevFocus;
	}
	return null;
    }
}

   private void udfEditRow(){

   }
    Color g1 = new Color(153,255,255);
    Color g2 = new Color(255,255,255);

    Color fHitam = new Color(0,0,0);
    Color fPutih = new Color(255,255,255);

    Color crtHitam =new java.awt.Color(0, 0, 0);
    Color crtPutih = new java.awt.Color(255, 255, 255);
}
